using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Text;

namespace ClothingStoreFranchise.NetCore.Common.Types
{
    public abstract class Entity<K> : IEquatable<Entity<K>>
    {
        [Required, Key, DatabaseGenerated(DatabaseGeneratedOption.None)]
        public long Id { get; set; }

        /// <summary>
        /// Returns the unique identifier of each entity.
        /// - If an entity has a unique, immutable field, this method returns that field.
        /// - Otherwise, it returns an auto-generated AppId (see IAutoGeneratedAppId).
        /// </summary>
        /// <returns></returns>
        public abstract K GetAppId();

        public bool Equals(Entity<K> other)
        {
            if (other == null)
            {
                return false;
            }

            return GetAppId().Equals(other.GetAppId());
        }

        public override bool Equals(object obj)
        {
            return Equals(obj as Entity<K>);
        }

        public override int GetHashCode()
        {
            return -409_944_030 + EqualityComparer<K>.Default.GetHashCode(GetAppId());
        }
    }
}
